# This is the Cirrus CI control file used by cfbot to test proposed PostgreSQL 
# patches.  It is not part of the PostgreSQL source tree (though maybe one day
# it could be), but can be added to any branch for testing.

# cfbot.cputube.org

env:
  CIRRUS_CLONE_DEPTH: 1

# ====== FreeBSD ======
# TODO: backtrace on crash
# TODO: add more build options

freebsd_task:
  name: FreeBSD

  matrix:
    - name: FreeBSD 13.0
      freebsd_instance:
        image_family: freebsd-13-0
    - name: FreeBSD 12.2
      freebsd_instance:
        image_family: freebsd-12-2

  env:
    CIRRUS_CLONE_DEPTH: 1
    MAKE_FLAGS: -s -j4
    CCACHE_SIZE: "500M"
    CCACHE_DIR: "/tmp/ccache_dir"

  pkginstall_script:
    - uname -a
    - pkg update -f
    - pkg install -y readline flex bison gmake perl5 p5-IPC-Run liblz4 ccache pkgconf zstd
  create_user_script:
    - pw useradd postgres
    - chown -R postgres:postgres .
    - mkdir -p /tmp/ccache_dir
    - chown -R postgres:postgres /tmp/ccache_dir
  build_script:
    - su postgres -c './configure --enable-cassert --enable-debug --enable-tap-tests --with-ssl=openssl --with-perl --with-lz4 --with-includes=/usr/local/include --with-libs=/usr/local/lib CC="ccache cc"'
    - su postgres -c 'make -s -j4'
  test_script:
    - su postgres -c 'PG_TEST_EXTRA=ssl make -s check-world'
  on_failure:
    debug_script:
      - for F in ` find . -name initdb.log -o -name regression.diffs -o -name postmaster.log` ; do echo === $F === ; head -1000 $F ; done

macos_task:
  name: macOS
  osx_instance:
    image: catalina-base
  install_script:
    - uname -a
    - brew install zstd
    - cpan -T IPC::Run
  build_script:
    - export PERL5LIB=~/perl5/lib/perl5
    - ./configure --prefix=$HOME/install --enable-cassert --enable-debug --enable-tap-tests --without-readline --with-ssl=openssl --with-bonjour --with-includes=/usr/local/include:/usr/local/opt/openssl/include --with-libs=/usr/local/libs:/usr/local/opt/openssl/lib
    - make -s -j12
    - make -s install
  test_script:
    - export PERL5LIB=~/perl5/lib/perl5
    - ulimit -c unlimited
    - make -s check
  on_failure:
    debug_script:
      - for F in ` find . -name initdb.log -o -name regression.diffs -o -name postmaster.log` ; do echo === $F === ; head -1000 $F ; done
      - for corefile in $(find /cores/ -name 'core.*' 2>/dev/null) ; do lldb -c $corefile --batch -o 'thread backtrace all' -o 'quit' ; done

# ====== Linux ======
# TODO: backtrace on crash
# TODO: use ccache and preserve ccache folder
# TODO: use a docker image so that we don't have to install all the packages every time

task:
  name: Linux
  container:
    image: debian:latest
  install_script:
    - uname -a
    - apt-get --yes update
    - DEBIAN_FRONTEND=noninteractive apt-get --yes install gcc libreadline-dev flex bison make perl libipc-run-perl clang llvm-dev libperl-dev libpython3-dev tcl-dev libldap2-dev libicu-dev docbook-xml docbook-xsl fop libxml2-utils xsltproc krb5-admin-server krb5-kdc krb5-user slapd ldap-utils libssl-dev pkg-config locales-all liblz4-dev libzstd-dev python3-distutils
  create_user_script:
    - useradd -m postgres
    - chown -R postgres:postgres .
  build_script:
    - su postgres -c './configure --enable-cassert --enable-debug --enable-tap-tests --with-tcl --with-python --with-perl --with-ldap --with-ssl=openssl --with-icu --with-llvm'
    - su postgres -c 'make -s -j4'
  docs_script:
    - su postgres -c 'make docs'
  test_script:
    - su postgres -c 'PG_TEST_EXTRA=ssl make -s check-world' || su postgres -c '( for F in ` find . -name initdb.log -o -name regression.diffs ` ; do echo === $F === ; head -1000 $F ; done ; exit 1 )'

